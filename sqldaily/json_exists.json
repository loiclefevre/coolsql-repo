{
"title": "Search JSON arrays",
 "sql": "\n\n\n  -- How to use JSON_EXISTS to find JSON arrays\n  -- containing a given value\n  create table bricks ( jdata json );\n  insert into bricks values ( \n    '{ \"colours\" : [\"red\", \"blue\", \"green\"] }'\n  ), ( \n    '{ \"colours\" : [\"orange\", \"red\", \"blue\"] }'\n  ), ( \n    '{ \"colours\" : [\"blue\", \"green\", \"violet\"] }'\n  );\n\n  select * from bricks\n  where  json_exists (\n    jdata, '$.colours[*]?(@ == $colour)'\n    passing 'red' as \"colour\"\n  );\n\n  JDATA\n  -----------------------------------\n  {\"colours\":[\"red\",\"blue\",\"green\"]}\n  {\"colours\":[\"orange\",\"red\",\"blue\"]}\n\n  -- Create a multivalue index to\n  -- search the array efficiently\n  create multivalue index brick_colour_i \n    on bricks ( jdata.colours.string() );\n\n  select * from bricks\n  where  json_exists (\n    jdata, '$.colours[*]?(@ == $colour)'\n    passing 'violet' as \"colour\"\n  );\n\n  JDATA\n  -------------------------------------\n  {\"colours\":[\"blue\",\"green\",\"violet\"]}\n\n   Id  | Operation                           | Name           \n  -----------------------------------------------------\n     0 | SELECT STATEMENT                    |                \n     1 |  TABLE ACCESS BY INDEX ROWID BATCHED| BRICKS         \n  *  2 |   INDEX RANGE SCAN (MULTI VALUE)    | COLOUR_I ",
 "fontSize": 18,
 "fontName": "Consolas",
 "loopGIF": true,
 "highlightedWords": "json_exists",
 "noMargin": true,
 "transparentBackground": false,
 "displayLineNumbers": false,
 "displayTabs": false,
 "speedMultiplier": 1.000000,
 "selection": {"start": 840, "end": 840, "mode": "ROUND_SQUARE", "hint": "", "top": true},
 "version": "Oracle Database since 18c (July 2018)", "codePanelTransparency": 255, "whiteOverlay": "None", "overlayTransparency": 255,
 "overlayGlow": 100,
 "overlayBloom": 0,
 "tableBorders": false,
 "gradient": {"name": "White", "fromX": 0.000000, "fromY": 0.000000, "toX": 100.000000, "toY": 100.000000,  "colors": [{"rgb": true, "red": 1.000000, "green": 1.000000, "blue": 1.000000, "opacity": 1.000000, "percent": 10}, {"rgb": true, "red": 1.000000, "green": 1.000000, "blue": 1.000000, "opacity": 1.000000, "percent": 100}]},
 "explanations": [{"start": 367, "end": 433, "text": "$.colours[*] is the path to the array\n?(@ == $colour) matches the $colour variable\npassing 'red' as \"colour\" gives the value for $colour", "durationInMS": 10000, "displayAtSemiColon": false}, {"start": 688, "end": 710, "text": "This indexes values in the colours array\nThe string() method specifies their data type\nYou must state the data type of the array elements", "durationInMS": 10000, "displayAtSemiColon": false}, {"start": 1186, "end": 1230, "text": "The plan shows that the multivalue index was used", "durationInMS": 7380, "displayAtSemiColon": false}],
 "explanationsBorderColor": {"rgb": true, "red": 0.407843, "green": 0.882353, "blue": 0.815686, "opacity": 1.000000, "percent": 100},
 "targetURL": "",
 "finalWaitTime": 4000

}
